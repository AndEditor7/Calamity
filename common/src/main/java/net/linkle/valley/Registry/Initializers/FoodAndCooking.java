package net.linkle.valley.Registry.Initializers;

import net.linkle.valley.ValleyMain;
import net.linkle.valley.Registry.Cooking.FoodTypeBases.*;
import net.minecraft.entity.effect.StatusEffectInstance;
import net.minecraft.entity.effect.StatusEffects;
import net.minecraft.item.FoodComponent;
import net.minecraft.item.Item;

import static net.linkle.valley.Registry.Initializers.ItemGroups.COOKING_GROUP;
import static net.linkle.valley.Registry.Initializers.ItemGroups.MISC_GROUP;
import static net.linkle.valley.Registry.Utils.Util.registerItem;

import dev.architectury.registry.registries.RegistrySupplier;

public class FoodAndCooking {
    
    public static final RegistrySupplier<Item> DRIED_SALMON = registerItem("dried_salmon", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.4f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> COOKED_SARDINE = registerItem("sardine_cooked", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.4f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> COOKED_CRAB = registerItem("crab_red_cooked", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(7).saturationModifier(0.4f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> DRIED_FIRE_EEL = registerItem("fire_eel_dried", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(3).saturationModifier(0.4f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> COOKED_FIRE_EEL = registerItem("fire_eel_cooked", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.4f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> PEPPERCORN = registerItem("black_peppercorns", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(1).saturationModifier(0.6f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> THYME = registerItem("thyme", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(1).saturationModifier(0.6f).build()).maxCount(64)));

    public static final RegistrySupplier<Item> DRIED_COD = registerItem("dried_cod", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.4f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> DRIED_TROPICAL = registerItem("dried_tropical_fish", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.4f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> COOKED_TROPICAL = registerItem("cooked_tropical_fish", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(5).saturationModifier(0.4f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> DRIED_SUCKER = registerItem("dried_sucker", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.4f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> RICE_ITEM = registerItem("rice_item", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(3).saturationModifier(0.6f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> SEAWEED_ITEM = registerItem("dried_seaweed", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.6f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> MILK_BOTTLE = registerItem("milk_bottle", () -> new MilkBottleBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(2).saturationModifier(0.5f).build()).maxCount(16)));
    public static final RegistrySupplier<Item> CHOCO_MILK = registerItem("chocolate_milk", () -> new DrinkBottleBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(5).saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.NIGHT_VISION,300), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> PUMPKIN_BOTTLE = registerItem("pumpkin_bottle", () -> new DrinkBottleBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(7).saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.REGENERATION,300), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> TEA = registerItem("tea", () -> new DrinkTeaBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(2).saturationModifier(1f).statusEffect(new StatusEffectInstance(StatusEffects.REGENERATION,120), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> TEA_BB = registerItem("tea_bb", () -> new DrinkTeaBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(2).saturationModifier(1f).statusEffect(new StatusEffectInstance(StatusEffects.SPEED,1200), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> TEA_SB = registerItem("tea_sb", () -> new DrinkTeaBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(2).saturationModifier(1f).statusEffect(new StatusEffectInstance(StatusEffects.STRENGTH,1200), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> TEA_M = registerItem("tea_miner", () -> new DrinkTeaBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(2).saturationModifier(1f).statusEffect(new StatusEffectInstance(StatusEffects.HASTE,1200), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> TEA_D = registerItem("tea_dandelion", () -> new DrinkTeaBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(2).saturationModifier(1f).statusEffect(new StatusEffectInstance(StatusEffects.LUCK,1200), 1.0f).build()).maxCount(1)));

    public static final RegistrySupplier<Item> HONEYCOMB_CHUNK = registerItem("honeycomb_chunk", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(2).saturationModifier(1f).statusEffect(new StatusEffectInstance(StatusEffects.REGENERATION,120), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> SALT = registerItem("salt", () -> new FoodItemBase(new Item.Settings().group(MISC_GROUP).food(new FoodComponent.Builder().hunger(1).saturationModifier(0.5f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> CLOWN_SALAD = registerItem("clownfish_salad", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(8).saturationModifier(0.6f).statusEffect(new StatusEffectInstance(StatusEffects.DOLPHINS_GRACE,600),1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> CAKE_SLICE = registerItem("cake_slice", () -> new PieBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(2).saturationModifier(0.4f).build()).maxCount(64)));

    public static final RegistrySupplier<Item> RAW_EGGS = registerItem("raw_egg_bowl", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(1).saturationModifier(1.2f).statusEffect(new StatusEffectInstance(StatusEffects.HUNGER, 600), 0.7f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> COOKED_EGG_BOWL = registerItem("cooked_egg_bowl", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(5).saturationModifier(0.6f).meat().build()).maxCount(1)));
    public static final RegistrySupplier<Item> FRUIT_KABOB = registerItem("fruit_kabob", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(8).saturationModifier(0.6f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> MOREL_KABOB = registerItem("morel_skewer", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(8).saturationModifier(0.6f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> GOLDEN_FRUIT_KABOB = registerItem("golden_kabob", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.6f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> APPLE_JUICE = registerItem("apple_juice", () -> new DrinkBottleBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.SPEED,200),1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> BEET_JUICE = registerItem("beet_juice", () -> new DrinkBottleBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.SLOW_FALLING,200),1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> CARROT_JUICE = registerItem("carrot_juice", () -> new DrinkBottleBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.NIGHT_VISION,200),1.0f).statusEffect(new StatusEffectInstance(StatusEffects.GLOWING,200),1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> POTATO_JUICE = registerItem("potato_juice", () -> new DrinkBottleBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.POISON,200),1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> MOREL_OIL = registerItem("morel_oil", () -> new DrinkBottleBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.SLOWNESS,200),1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> GB_JUICE = registerItem("gb_juice", () -> new DrinkBottleBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.LUCK,200),1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> GB_JUICE_2 = registerItem("glow_berry_juice", () -> new DrinkBottleBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.GLOWING,200),1.0f).build()).maxCount(1)));

    public static final RegistrySupplier<Item> APPLE_DOUGH = registerItem("apple_dough", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(1).saturationModifier(0.5f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> CARROT_SALAD = registerItem("carrot_salad", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(6).saturationModifier(0.5f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> APPLE_PIE = registerItem("apple_pie", () -> new PieBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(8).saturationModifier(0.5f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> PUMPKIN_BOWL = registerItem("pumpkin_bowl", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(7).saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.REGENERATION,300),1.0f).build()).maxCount(1)));

    public static final RegistrySupplier<Item> BBOX_CLOWNFISH = registerItem("bbox_clownfish", () -> new BBoxBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.DOLPHINS_GRACE,900),1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> BBOX_SALMON = registerItem("bbox_salmon", () -> new BBoxBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.SPEED,900),1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> BBOX_UNAGI = registerItem("bbox_unagi", () -> new BBoxBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.HEALTH_BOOST,900),1.0f).build()).maxCount(1)));

    public static final RegistrySupplier<Item> CAKE_DOUGH = registerItem("cake_dough", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(1).saturationModifier(1f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> NETHER_FUNGUS_STEW = registerItem("nether_fungus_stew", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(8).saturationModifier(0.4f).build()).maxCount(1)));

    public static final RegistrySupplier<Item> BONE_BROTH = registerItem("bone_broth", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.5f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> TOMATO_SOUP = registerItem("tomato_soup", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(5).saturationModifier(0.5f).build()).maxCount(1)));

    public static final RegistrySupplier<Item> RICE_BOWL = registerItem("rice_bowl", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.5f).build()).maxCount(1)));

    public static final RegistrySupplier<Item> COOKIE_DOUGH = registerItem("cookie_dough", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(1).saturationModifier(0.5f).build()).maxCount(64)));

    public static final RegistrySupplier<Item> SALMON_ROLL = registerItem("salmon_roll", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(6).saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.SPEED,450), 1.0f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> CRAB_ROLL = registerItem("crab_roll", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(6).saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.WATER_BREATHING,450), 1.0f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> PERCH_ROLL = registerItem("perch_roll", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(6).saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.RESISTANCE,450), 1.0f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> FIRE_EEL_ROLL = registerItem("fire_eel_roll", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(6).saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.FIRE_RESISTANCE,450), 1.0f).build()).maxCount(64)));

    public static final RegistrySupplier<Item> SKELE_DOUGH = registerItem("skeleton_cookie_dough", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(1).saturationModifier(1f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> SKELE_COOKIE = registerItem("skeleton_cookie", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.7f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> GLAZED_APPLE = registerItem("glazed_apple", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(5).saturationModifier(0.7f).build()).maxCount(64)));

    public static final RegistrySupplier<Item> BREAD_DOUGH = registerItem("bread_dough", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(1).saturationModifier(1f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> PUMPKIN_DOUGH = registerItem("pumpkin_dough", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(1).saturationModifier(1f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> PANCAKE_DOUGH = registerItem("pancake_dough", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(1).saturationModifier(1f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> RAW_BACON = registerItem("raw_bacon", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(1).saturationModifier(1f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> COOKED_BACON = registerItem("cooked_bacon", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.5f).meat().build()).maxCount(64)));
    public static final RegistrySupplier<Item> PANCAKE = registerItem("pancake", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(5).saturationModifier(0.5f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> BB_DOUGH = registerItem("bitter_dough", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(1).saturationModifier(1f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> SB_DOUGH = registerItem("sweet_dough", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(1).saturationModifier(1f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> GB_DOUGH = registerItem("glow_dough", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(1).saturationModifier(1f).build()).maxCount(64)));

    public static final RegistrySupplier<Item> APPLE_CYSER = registerItem("apple_cyser", () -> new MeadBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(3).saturationModifier(1f).statusEffect(new StatusEffectInstance(StatusEffects.NAUSEA,300), 1.0f).statusEffect(new StatusEffectInstance(StatusEffects.REGENERATION,600), 1.0f).statusEffect(new StatusEffectInstance(StatusEffects.SPEED,600), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> BITTER_BERRY_CYSER = registerItem("bitter_berry_cyser", () -> new MeadBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(3).saturationModifier(1f).statusEffect(new StatusEffectInstance(StatusEffects.NAUSEA,300), 1.0f).statusEffect(new StatusEffectInstance(StatusEffects.RESISTANCE,600), 1.0f).statusEffect(new StatusEffectInstance(StatusEffects.STRENGTH,600), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> SPICY_BERRY_CYSER = registerItem("spicy_berry_cyser", () -> new MeadBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(3).saturationModifier(1f).statusEffect(new StatusEffectInstance(StatusEffects.NAUSEA,300), 1.0f).statusEffect(new StatusEffectInstance(StatusEffects.FIRE_RESISTANCE,600), 1.0f).statusEffect(new StatusEffectInstance(StatusEffects.SLOW_FALLING,600), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> SWEET_BERRY_CYSER = registerItem("sweet_berry_cyser", () -> new MeadBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(3).saturationModifier(1f).statusEffect(new StatusEffectInstance(StatusEffects.NAUSEA,300), 1.0f).statusEffect(new StatusEffectInstance(StatusEffects.HEALTH_BOOST,600), 1.0f).statusEffect(new StatusEffectInstance(StatusEffects.STRENGTH,600), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> MEAD_MUG = registerItem("mead_mug", () -> new MeadBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(3).saturationModifier(1f).statusEffect(new StatusEffectInstance(StatusEffects.NAUSEA,300), 1.0f).statusEffect(new StatusEffectInstance(StatusEffects.STRENGTH,600), 1.0f).statusEffect(new StatusEffectInstance(StatusEffects.SPEED,600), 1.0f).build()).maxCount(16)));
    public static final RegistrySupplier<Item> CHOCO_CYSER = registerItem("chocolate_cyser", () -> new MeadBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(3).saturationModifier(1f).statusEffect(new StatusEffectInstance(StatusEffects.NAUSEA,300), 1.0f).statusEffect(new StatusEffectInstance(StatusEffects.NIGHT_VISION,600), 1.0f).statusEffect(new StatusEffectInstance(StatusEffects.SPEED,600), 1.0f).build()).maxCount(1)));

    public static final RegistrySupplier<Item> SWEET_BERRY_WINE = registerItem("sweet_berry_wine", () -> new DrinkBottleBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(2).saturationModifier(1f).statusEffect(new StatusEffectInstance(StatusEffects.NAUSEA,200), 1.0f).statusEffect(new StatusEffectInstance(StatusEffects.REGENERATION,500), 1.0f).statusEffect(new StatusEffectInstance(StatusEffects.STRENGTH,600), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> BITTER_BERRY_WINE = registerItem("bitter_berry_wine", () -> new DrinkBottleBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(2).saturationModifier(1f).statusEffect(new StatusEffectInstance(StatusEffects.NAUSEA,200), 1.0f).statusEffect(new StatusEffectInstance(StatusEffects.SLOW_FALLING,500), 1.0f).statusEffect(new StatusEffectInstance(StatusEffects.STRENGTH,600), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> SPICY_BERRY_WINE = registerItem("spicy_berry_wine", () -> new DrinkBottleBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(2).saturationModifier(1f).statusEffect(new StatusEffectInstance(StatusEffects.NAUSEA,200), 1.0f).statusEffect(new StatusEffectInstance(StatusEffects.FIRE_RESISTANCE,500), 1.0f).statusEffect(new StatusEffectInstance(StatusEffects.SPEED,600), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> CHORUS_WINE = registerItem("chorus_wine", () -> new DrinkBottleBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(2).saturationModifier(1f).statusEffect(new StatusEffectInstance(StatusEffects.NAUSEA,400), 1.0f).statusEffect(new StatusEffectInstance(StatusEffects.INVISIBILITY,600), 1.0f).statusEffect(new StatusEffectInstance(StatusEffects.RESISTANCE,600), 1.0f).build()).maxCount(1)));

    public static final RegistrySupplier<Item> CHICKEN_CURRY = registerItem("chicken_curry", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP)
            .food(new FoodComponent.Builder().hunger(10).saturationModifier(0.7f)
                    .statusEffect(new StatusEffectInstance(StatusEffects.SLOW_FALLING,450), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> FULL_BREAKFAST_VEGETARIAN = registerItem("full_breakfast_vegetarian", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(9).saturationModifier(0.6f).statusEffect(new StatusEffectInstance(StatusEffects.HASTE,900), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> COOKED_PUMPKIN_SEEDS = registerItem("cooked_pumpkin_seeds", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(2).saturationModifier(0.4f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> COD_CHOWDER = registerItem("cod_chowder", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.7f).statusEffect(new StatusEffectInstance(StatusEffects.WATER_BREATHING,600), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> SARDINE_SOUP = registerItem("sardine_soup", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.7f).statusEffect(new StatusEffectInstance(StatusEffects.WATER_BREATHING,600), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> SEAWEED_SALAD = registerItem("seaweed_salad", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.5f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> MUSHROOM_SALAD = registerItem("mushroom_salad", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.5f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> MINER_SALAD = registerItem("miners_salad", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.4f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> POKE_BOWL = registerItem("poke_bowl", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(8).saturationModifier(0.4f).statusEffect(new StatusEffectInstance(StatusEffects.REGENERATION,120), 1.0f).build()).maxCount(1)));

    public static final RegistrySupplier<Item> TOMATO_JUICE = registerItem("tomato_juice", () -> new DrinkBottleBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.5f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> COCOA = registerItem("cocoa", () -> new DrinkTeaBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(2).saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.REGENERATION,120), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> CLOWNFISH_ROLL = registerItem("clownfish_roll", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(6).saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.DOLPHINS_GRACE,450), 1.0f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> CRYS_HONEY = registerItem("crystalized_honey", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.REGENERATION,240), 1.0f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> MAIZE_PORRIDGE = registerItem("maize_porridge", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.HASTE,450), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> BEEF_STEW = registerItem("beef_stew", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.ABSORPTION,60),1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> BEAR_STEW = registerItem("bear_stew", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.RESISTANCE,60),1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> SPICY_RABBIT_BIGO = registerItem("rabbit_bigo", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.4f).statusEffect(new StatusEffectInstance(StatusEffects.HASTE,600),1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> LAMB_BIRYANI = registerItem("lamb_biryani", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(9).saturationModifier(0.4f).statusEffect(new StatusEffectInstance(StatusEffects.JUMP_BOOST,900), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> PORK_STIR_FRY = registerItem("pork_stir_fry", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.4f).statusEffect(new StatusEffectInstance(StatusEffects.RESISTANCE,600), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> SQUID_ROLL = registerItem("squid_roll", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(6).saturationModifier(0.7f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> FROZEN_JELLY = registerItem("frozen_jelly", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.6f).statusEffect(new StatusEffectInstance(StatusEffects.FIRE_RESISTANCE,600),1.0f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> GRILLED_SUCKER = registerItem("grilled_sucker", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(6).saturationModifier(0.6f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> MONSTER_JERKY = registerItem("monster_jerky", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.4f).meat().build()).maxCount(64)));
    public static final RegistrySupplier<Item> GLOW_SOUP = registerItem("glow_soup", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(8).saturationModifier(0.7f).statusEffect(new StatusEffectInstance(StatusEffects.GLOWING,600), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> BEAR_JERKY = registerItem("bear_jerky", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.4f).meat().build()).maxCount(64)));
    public static final RegistrySupplier<Item> RAW_TENDER = registerItem("raw_tenderloin", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(5).saturationModifier(0.4f).meat().build()).maxCount(64)));
    public static final RegistrySupplier<Item> COOKED_TENDER = registerItem("cooked_tenderloin", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(8).saturationModifier(0.4f).meat().build()).maxCount(64)));

    public static final RegistrySupplier<Item> PANCAKE_BREAKFAST = registerItem("pancake_breakfast", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(8).saturationModifier(0.6f).statusEffect(new StatusEffectInstance(StatusEffects.HASTE,900), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> PANCAKE_BREAKFAST_LARGE = registerItem("large_pancake_breakfast", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.6f).statusEffect(new StatusEffectInstance(StatusEffects.HASTE,1200), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> FULL_BREAKFAST = registerItem("full_breakfast", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.6f).statusEffect(new StatusEffectInstance(StatusEffects.STRENGTH,1200), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> BACON_AND_EGGS = registerItem("bacon_and_eggs", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(8).saturationModifier(0.6f).statusEffect(new StatusEffectInstance(StatusEffects.STRENGTH,900), 1.0f).build()).maxCount(1)));

    public static final RegistrySupplier<Item> GRUB = registerItem("grub", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(12).saturationModifier(0.6f).statusEffect(new StatusEffectInstance(StatusEffects.STRENGTH,1800), 1.0f).build()).maxCount(1)));

    public static final RegistrySupplier<Item> DRUMSTICK = registerItem("drumstick", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.6f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> COOKED_APPLE = registerItem("cooked_apple", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(6).saturationModifier(0.5f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> STUFFED_ONION = registerItem("stuffed_onion", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(9).meat().saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.HEALTH_BOOST,900), 1.0f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> BAKED_POTATO_SPECIAL= registerItem("baked_potato", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(9).meat().saturationModifier(0.5f).statusEffect(new StatusEffectInstance(StatusEffects.LUCK,900), 1.0f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> WORM = registerItem("worm", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(2).saturationModifier(0.6f).build()).maxCount(64)));

    public static final RegistrySupplier<Item> DOG_BISCUIT= registerItem("dog_biscuit", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(8).meat().saturationModifier(0.5f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> DOG_FOOD = registerItem("dog_food", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(8).saturationModifier(0.6f).meat().statusEffect(new StatusEffectInstance(StatusEffects.REGENERATION,900), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> DOG_PUMPKIN= registerItem("puppy_pumpkin", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(8).meat().saturationModifier(0.5f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> FOX_FOOD = registerItem("fox_food", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(8).saturationModifier(0.6f).meat().statusEffect(new StatusEffectInstance(StatusEffects.REGENERATION,900), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> FOX_TREAT= registerItem("fox_treat", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(8).meat().saturationModifier(0.5f).build()).maxCount(64)));

    public static final RegistrySupplier<Item> GOLDEN_BB = registerItem("glistering_bitter_berries", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.6f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> GOLDEN_SB = registerItem("glistering_sweet_berries", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.6f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> GOLDEN_SPB = registerItem("glistering_spicy_berries", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.6f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> GOLDEN_P = registerItem("glistering_potato", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.6f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> GOLDEN_B = registerItem("glistering_beet", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.6f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> GOLDEN_O = registerItem("glistering_onion", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.6f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> GOLDEN_T = registerItem("glistering_tomato", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.6f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> GOLDEN_K = registerItem("glistering_kelp", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.6f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> GOLDEN_H = registerItem("glistering_honeycomb", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.6f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> GOLDEN_J = registerItem("glistering_juice", () -> new DrinkBottleBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.6f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> GOLDEN_GB = registerItem("glistering_green_bean", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.6f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> GOLDEN_M = registerItem("glistering_mandrake", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.6f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> GOLDEN_GB_2 = registerItem("glistering_glow_berries", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.6f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> VEGE_STIR_FRY = registerItem("vege_stir_fry", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.4f).statusEffect(new StatusEffectInstance(StatusEffects.RESISTANCE,600), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> BEAR_STIR_FRY = registerItem("bear_stir_fry", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(10).saturationModifier(0.4f).statusEffect(new StatusEffectInstance(StatusEffects.STRENGTH,600), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> MANDRAKE_SOUP = registerItem("mandrake_soup", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(9).saturationModifier(0.4f).statusEffect(new StatusEffectInstance(StatusEffects.REGENERATION,900), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> CANDIED_SNOW_YAM = registerItem("candied_snow_yams", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(9).saturationModifier(0.4f).statusEffect(new StatusEffectInstance(StatusEffects.FIRE_RESISTANCE,900), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> WINTER_ROOT_STEW = registerItem("winter_root_stew", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(9).saturationModifier(0.4f).statusEffect(new StatusEffectInstance(StatusEffects.RESISTANCE,900), 1.0f).build()).maxCount(1)));
    public static final RegistrySupplier<Item> WORM_SOUP = registerItem("worm_bowl", () -> new BowlBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(8).saturationModifier(0.8f).statusEffect(new StatusEffectInstance(StatusEffects.NAUSEA,900), 1.0f).build()).maxCount(1)));

    public static final RegistrySupplier<Item> BITTER_PIE = registerItem("bitter_pie", () -> new PieBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(8).saturationModifier(0.5f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> SWEET_PIE = registerItem("sweet_pie", () -> new PieBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(8).saturationModifier(0.5f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> GLOW_PIE = registerItem("glow_pie", () -> new PieBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(8).saturationModifier(0.5f).build()).maxCount(64)));

    public static final RegistrySupplier<Item> G_WATER = registerItem("grilled_watermelon", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(4).saturationModifier(0.5f).build()).maxCount(64)));
    public static final RegistrySupplier<Item> B_WATER = registerItem("watermelon_fruit_bowl", () -> new FoodItemBase(new Item.Settings().group(COOKING_GROUP).food(new FoodComponent.Builder().hunger(8).saturationModifier(0.5f).build()).maxCount(64)));

    public static void initialize() {
        ValleyMain.LOGGER.info("FoodAndCooking items has been initialized");
    }
}